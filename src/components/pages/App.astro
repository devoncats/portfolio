---
import Layout from "@/layouts/Layout.astro";
import Hero from "../Hero.astro";

import { getI18N } from "@/i18n";

import ArrowDown from "@/icons/arrow-down.astro";
import About from "../About.astro";
import Card from "../generic/Card";

import ReactIcon from '@/icons/react.jsx'
 
const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });

const skills = [
    "React",
    "Tailwind",
    "HTML",
    "CSS",
    "JavaScript",
    "Java",
    "Postgresql",
    "Astro",
    "Git"
]
---

<Layout title="devoncats | Fullstack Developer">
    <main
        id="hero"
        class="px-36 pt-36 pb-64 h-screen flex flex-col justify-around"
    >
        <Hero />
    </main>

    <section class="relative">
        <div class="absolute right-16 -translate-y-12">
            <a href="#about" class="text-sm flex gap-2 items-center">
                {i18n.HERO.SCROLL_MESSAGE}
                <ArrowDown />
            </a>
        </div>
    </section>

    <About />

    <article id='skills' class="flex flex-col items-center px-36 py-16 gap-16">
        <h2 class="font-serif text-4xl">Skills</h2> 

        <section class="w-full overflow-hidden mask">
            <ul class="flex gap-4 py-4 scroll w-fit">
            {
                skills.map((skill) => (<Card skill={skill} client:visible />))
            }
            {
                skills.map((skill) => (<Card skill={skill} client:visible />))

            }
            </ul>
        </section>
    </article>
</Layout>

<style>
    #hero {
        background-size: 40px 40px;
        background-image: linear-gradient(
                to right,
                rgba(0, 0, 0, 0.03) 1px,
                transparent 1px
            ),
            linear-gradient(to bottom, rgba(0, 0, 0, 0.03) 1px, transparent 1px);
    }

    .mask {
        mask: linear-gradient(
            90deg,
            transparent,
            white 20%,
            white 95%,
            transparent
        );
    }

    @keyframes scroll {
        to {
            transform: translate(calc(-50% - 0.5rem));
        }
    }

    .scroll {
        animation: scroll 20s linear infinite;
    }

    .scroll:hover {
        animation-play-state: paused;
    }
</style>
